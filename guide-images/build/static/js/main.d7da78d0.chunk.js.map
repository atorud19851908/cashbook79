{"version":3,"sources":["CbContext.js","components/CbTemplete.js","components/CbHead.js","components/CbType.js","components/CbItem.js","components/CbList.js","components/CbCreateButton.js","components/CbDialog.js","App.js","index.js"],"names":["initialExpense","id","type","text","price","cbReducer","state","action","concat","expense","map","filter","Error","CbStateContext","createContext","CbDispatchContext","CbNextIdContext","CbTypeContext","CbSetTypeContext","CbModeContext","CbSetModeContext","CbProvider","children","nextId","useRef","useReducer","dispatch","useState","setType","modeName","current","mode","setMode","Provider","value","useCbState","context","useContext","useCbNextId","useCbSetMode","CbTempleteBlock","styled","div","CbTemplete","CbHeadBlock","CbHead","sum","reduce","acc","curr","parseInt","dateString","Date","toLocaleDateString","year","month","day","CbTypeBlock","CbType","useCbSetType","onChange","e","target","TypeTag","handleTypeColor","Text","Price","Edit","lighten","Remove","CbItemBlock","CbItem","style","textTransform","onClick","CbListBlock","CbList","cashbook","useCbType","key","CircleButton","button","darken","CbCreateButton","fadeIn","keyframes","fadeOut","slideUp","slideDown","DarkBackground","props","disappear","css","DialogBlock","InsertForm","form","Input","input","Select","select","ButtonGroup","Button","selected","theme","palette","color","CbDialog","useCbMode","modeId","modeTypeData","modeTextData","modePriceData","useCbDispatch","setText","setPrice","setAnimate","visible","localVisible","setLocalVisible","useEffect","setTimeout","onTypeChange","onTextChange","localStorage","setItem","onPriceChange","onCancel","gray","blue","onSubmit","preventDefault","min","pink","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7da78d0.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useRef, useState } from 'react';\n\nconst initialExpense = [\n    {\n        id: 1,\n        type: 'Kirim',\n        text: '',\n        price: 0\n    },\n    {\n        id: 2,\n        type: 'Chiqim',\n        text: '',\n        price: 0\n    },\n\n\n\n];\n\nfunction cbReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE':\n            return state.concat(action.expense);\n        case 'EDIT':\n            return state.map(expense => expense.id === action.expense.id ? {\n                ...expense,\n                type: action.expense.type,\n                text: action.expense.text,\n                price: action.expense.price\n            } : expense\n            );\n        case 'REMOVE':\n            return state.filter(expense => expense.id !== action.id);\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n};\n\nconst CbStateContext = createContext();\nconst CbDispatchContext = createContext();\nconst CbNextIdContext = createContext();\nconst CbTypeContext = createContext();\nconst CbSetTypeContext = createContext();\nconst CbModeContext = createContext();\nconst CbSetModeContext = createContext();\n\nexport function CbProvider({ children }) {\n    const nextId = useRef(5);\n    const [state, dispatch] = useReducer(cbReducer, initialExpense);\n    const [type, setType] = useState('all');\n    const [mode, setMode] = useState({ modeName: 'none', expense: { id: nextId.current, type: '', text: '', price: 0 } });\n\n    return (\n        <CbStateContext.Provider value={state}>\n            <CbDispatchContext.Provider value={dispatch}>\n                <CbNextIdContext.Provider value={nextId}>\n                    <CbTypeContext.Provider value={type}>\n                        <CbSetTypeContext.Provider value={setType}>\n                            <CbModeContext.Provider value={mode}>\n                                <CbSetModeContext.Provider value={setMode}>\n                                    {children}\n                                </CbSetModeContext.Provider>\n                            </CbModeContext.Provider>\n                        </CbSetTypeContext.Provider>\n                    </CbTypeContext.Provider>\n                </CbNextIdContext.Provider>\n            </CbDispatchContext.Provider>\n        </CbStateContext.Provider>\n    );\n}\n\nexport function useCbState() {\n    const context = useContext(CbStateContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbDispatch() {\n    const context = useContext(CbDispatchContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbNextId() {\n    const context = useContext(CbNextIdContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbType() {\n    const context = useContext(CbTypeContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbSetType() {\n    const context = useContext(CbSetTypeContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbMode() {\n    const context = useContext(CbModeContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useCbSetMode() {\n    const context = useContext(CbSetModeContext);\n    if (!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst CbTempleteBlock = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n    height: 100vh;\n    padding: 36px;\n    margin: 0 auto;\n    margin-bottom: 32px;\n    border-radius: 16px;\n\n    position: relative;\n\n    background: #FFF;\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\n`;\n\nfunction CbTemplete({ children }) {\n    return (\n        <CbTempleteBlock>\n            {children}\n        </CbTempleteBlock>\n    );\n}\n\nexport default CbTemplete;","import React from 'react';\nimport styled from 'styled-components';\nimport { useCbState } from '../CbContext';\n\nconst CbHeadBlock = styled.div`\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-bottom: 1px solid #000;\n\n    h1 {\n        margin: 0;\n        font-size: 36px;\n        color: #212529;\n        text-align:center;\n    }\n\n    p {\n        font-size: 20px;\n        text-align:center;\n    }\n\n    strong {\n        color: #E03231;\n    }\n`;\n\nfunction CbHead() {\n    const cashbook = useCbState();\n    const sum = cashbook\n        .map(expense => expense.price)\n        .reduce((acc, curr) => acc + parseInt(curr, 10), 0);\n    const today = new Date();\n    const dateString = today.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    return (\n        <CbHeadBlock>\n            <h1>Kundalik xarajatlar</h1>\n            <p>{dateString}</p>\n            <p>Jami Xarajatlar: <strong>{sum} so'm</strong></p>\n        </CbHeadBlock>\n    );\n}\n\nexport default CbHead;","import React from 'react';\nimport styled from 'styled-components';\nimport { useCbSetType } from '../CbContext';\n\nconst CbTypeBlock = styled.div`\n    padding-top: 16px;\n    padding-bottom: 16px;\n    border-bottom: 1px solid #AEB5BD;\n    margin-bottom: 12px;\n\n    text-align: right;\n\n    span {\n        margin: 0;\n        font-size: 20px;\n        color: #343a40;\n    }\n\n    select {\n        padding: 5px;\n        &:focus {\n            outline: none;\n        }\n    }\n`;\n\nfunction CbType() {\n    const setType = useCbSetType();\n    const onSort = e => setType(e.target.value);\n    return (\n        <CbTypeBlock>\n            <span>Kategoriya bo'yicha ko'rish: </span>\n            <select onChange={onSort}>\n                <option value='all'>Hammasi</option>\n                <option value='Kirim'>Kirim</option>\n                <option value='Chiqim'>Chiqim</option>\n\n            </select>\n        </CbTypeBlock>\n    );\n}\n\nexport default CbType;","import React from 'react';\nimport styled from 'styled-components';\nimport { useCbSetMode } from '../CbContext';\nimport { MdDelete } from 'react-icons/md';\nimport { FaPen } from 'react-icons/fa';\nimport { lighten } from 'polished';\n\nconst handleTypeColor = type => {\n    switch (type) {\n        case 'Chiqim':\n            return '#f70f0f';\n        case 'Kirim':\n            return '#0ff751';\n        default:\n            return '#75C1FC';\n    }\n}\n\nconst TypeTag = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 20px;\n    border-radius: 0px;\n\n    font-size: 16px;\n    font-weight: 400;\n\n    background: ${({ type }) => handleTypeColor(type)};\n`;\n\nconst Text = styled.div`\n    flex: 1;\n    font-size: 16px;\n    color: #000;\n    text-align:center;\n`;\n\nconst Price = styled.div`\n    margin-right: 10px;\n    margin-left: 20px;\n    font-size: 14px;\n    color: #000;\n    text-align:center;\n`;\n\n\n\nconst Edit = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 12px;\n\n    color: red;\n    font-size: 24px;\n    cursor: pointer;\n\n    opacity: 1;\n    &:hover {\n        color: ${lighten(0.4, '#000')};\n    }\n\n    transition: 0.125s all ease-in;\n`;\n\nconst Remove = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    font-size: 30px;\n    color: #000;\n    cursor: pointer;\n\n    opacity: 1;\n    &:hover {\n        color: ${lighten(0.4, '#000')};\n    }\n\n    transition: 0.125s all ease-in;\n`;\n\nconst CbItemBlock = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom:8px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    border:2px solid black;\n    border-radius:5px;\n\n`;\n\nfunction CbItem({ id, type, text, price }) {\n    const setMode = useCbSetMode();\n\n    const onEdit = () => setMode({\n        modeName: 'edit',\n        expense: {\n            id,\n            type,\n            text,\n            price\n        }\n    });\n\n    const onRemove = () => setMode({\n        modeName: 'remove',\n        expense: {\n            id\n        }\n    });\n\n    const today = new Date();\n    const dateString = today.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric'\n    });\n    return (\n        <CbItemBlock id={id}>\n            <TypeTag type={type}>\n            {dateString}<br/>\n                {type ? type : '--'}\n            </TypeTag>\n\n            <Text text={text} type={type} style ={{textTransform:'capitalize'}}> {text ? text : '--'} </Text>\n            <Price price={price}>\n\n              <span>{price ? price : 0 } so'm </span>\n                  </Price>\n            <Edit onClick={onEdit}>\n                <FaPen />\n            </Edit>\n            <Remove onClick={onRemove}>\n                <MdDelete />\n            </Remove>\n        </CbItemBlock>\n    );\n}\n\nexport default CbItem;","import React from 'react';\nimport styled from 'styled-components';\nimport { useCbState, useCbType } from '../CbContext';\nimport CbItem from './CbItem';\n\nconst CbListBlock = styled.div`\n    flex: 1;\n    overflow-y: auto;\n    padding-bottom: 48px;\n`;\n\nfunction CbList() {\n    const cashbook = useCbState();\n    const type = useCbType();\n\n    if (type === 'all' || type === '') {\n        return (\n            <CbListBlock>\n                {cashbook.map(\n                    expense => <CbItem\n                        key={expense.id}\n                        id={expense.id}\n                        type={expense.type}\n                        text={expense.text}\n                        price={expense.price}\n                    />\n                )}\n            </CbListBlock>\n        );\n    } else {\n        return (\n            <CbListBlock>\n                {cashbook\n                    .filter(expense => expense.type === type)\n                    .map(\n                        expense => <CbItem\n                            key={expense.id}\n                            id={expense.id}\n                            type={expense.type}\n                            text={expense.text}\n                            price={expense.price}\n                        />\n                    )}\n            </CbListBlock>\n        );\n    }\n}\n\nexport default CbList;","import React from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { lighten, darken } from 'polished';\nimport { useCbSetMode, useCbNextId } from '../CbContext';\n\nconst CircleButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: 70px;\n    height: 70px;\n    margin-bottom: 51px;\n    border: none;\n    border-radius: 50%;\n    outline: none;\n\n    position: absolute;\n    right: -20px;\n    bottom: 0;\n    transform: translate(-50%, 50%);\n\n    font-size: 60px;\n    color: white;\n    cursor: pointer;\n\n    background: #0C8499;\n    &:hover {\n        background: ${lighten(0.1, '#0C8499')};\n    }\n    &:active {\n        background: ${darken(0.1, '#0c8499')};\n    }\n\n    transition: 0.125s all ease-in;\n`;\n\nfunction CbCreateButton() {\n    const setMode = useCbSetMode();\n    const nextId = useCbNextId();\n\n    const onCreate = () => setMode({\n        modeName: 'create',\n        expense: {\n            id: nextId.current,\n            type: '',\n            text: '',\n            price: 0\n        }\n    });\n\n    return (\n        <CircleButton onClick={onCreate}>\n            <MdAdd />\n        </CircleButton>\n    );\n}\n\nexport default CbCreateButton;","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider, keyframes, css } from 'styled-components';\nimport { useCbDispatch, useCbNextId, useCbMode, useCbSetMode } from '../CbContext';\nimport { lighten, darken } from 'polished';\n\nconst fadeIn = keyframes`\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n`;\n\nconst fadeOut = keyframes`\n    from {\n        opacity: 1;\n    }\n    to {\n        opacity: 0;\n    }\n`;\n\nconst slideUp = keyframes`\n    from {\n        transform: translateY(200px);\n    }\n    to {\n        transform: translateY(0px);\n    }\n`;\n\nconst slideDown = keyframes`\n    from {\n        transform: translateY(0px);\n    }\n    to {\n        transform: translateY(200px);\n    }\n`;\n\nconst DarkBackground = styled.div`\n    position: fixed;\n    left:0;\n    top:0;\n    width:100%;\n    height:100vh;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0,0,0,0.8);\n\n    animation-duration: 0.25s;\n    animation-timing-function: ease-out;\n    animation-name: ${fadeIn};\n    animation-fill-mode: forwards;\n\n    ${props => props.disappear && css`\n    animation-name: ${fadeOut};\n    `}\n`;\n\nconst DialogBlock = styled.div`\n    width: 370px;\n    padding: 1.5rem;\n    background: white;\n    border-radius: 4px;\n\n    h1 {\n        margin-top: 0.5em;\n        margin-bottom: 0.5em;\n        text-align:center;\n    }\n\n    h2 {\n        margin-top: 0.2em;\n        margin-bottom: 0.2em;\n    }\n\n    animation-duration: 0.25s;\n    animation-timing-function: ease-out;\n    animation-name: ${slideUp};\n    animation-fill-mode: forwards;\n\n     ${props => props.disappear && css`\n        animation-name: ${slideDown};\n    `}\n`;\n\nconst InsertForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 16px 12px;\n`;\n\nconst Input = styled.input`\n    box-sizing: border-box;\n    display: block;\n\n    width: 100%;\n    padding: 12px;\n    margin-bottom: 20px;\n    border: 1px solid #9B9B9B;\n    border-radius: 4px;\n    outline: none;\n    font-size: 18px;\n`;\n\nconst Select = styled.select`\n    padding: 12px;\n    margin-bottom: 20px;\n    border: 1px solid #9B9B9B;\n    border-radius: 4px;\n\n    &:focus {\n        outline: none;\n    }\n`;\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 20px;\n`;\n\nconst Button = styled.button`\n    align-items: center;\n    justify-content: center;\n\n    padding: 12px 24px;\n    border: none;\n    border-radius: 4px;\n\n    font-size: 18px;\n    font-weight: 700;\n    color: #FFF;\n    cursor: pointer;\n\n    ${props => {\n        const selected = props.theme.palette[props.color];\n        return css`\n            background: ${selected};\n            &:hover {\n                background: ${lighten(0.1, selected)};\n            }\n            &:active {\n                background: ${darken(0.1, selected)};\n                outline: none;\n            }\n        `;\n    }}\n\n    transition: 0.125s all ease-in;\n\n    &+& {\n        margin-left: 10px;\n    }\n`;\n\nfunction CbDialog() {\n    const mode = useCbMode();\n    const setMode = useCbSetMode();\n    const { modeName, expense: { id: modeId, type: modeTypeData, text: modeTextData, price: modePriceData } } = mode;\n    const nextId = useCbNextId();\n    const dispatch = useCbDispatch();\n\n    const [type, setType] = useState(modeTypeData);\n    const [text, setText] = useState(modeTextData);\n    const [price, setPrice] = useState(modePriceData);\n\n    const [animate, setAnimate] = useState(false);\n    const visible = !(modeName === 'none');\n    const [localVisible, setLocalVisible] = useState(visible);\n    //  const [item,setItem] =useState(\"\");\n\n\n\n\n\n\n    useEffect(() => {\n        if (localVisible && !visible) {\n            setAnimate(true);\n            setTimeout(() => setAnimate(false), 1000);\n        }\n        setLocalVisible(visible);\n    }, [localVisible, visible]);\n\n    useEffect(() => {\n        setType(modeTypeData);\n        setText(modeTextData);\n        setPrice(modePriceData);\n    }, [mode]);\n\n    const onTypeChange = e => setType(e.target.value);\n\n\n    const onTextChange = e =>{\n     setText(e.target.value);\n     localStorage.setItem(\"value\", text)\n\n\n    }\n    const onPriceChange = e => setPrice(e.target.value);\n\n\n\n    const onSubmit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'CREATE',\n            expense: {\n                id: nextId.current,\n                type: type,\n                text: text,\n                price: price\n            }\n        });\n        nextId.current += 1;\n        setMode({ ...mode, modeName: 'none' });\n    }\n\n    const onEdit = e => {\n        e.preventDefault();\n        dispatch({\n            type: 'EDIT',\n            expense: {\n                id: modeId,\n                type: type,\n                text: text,\n                price: price\n            }\n        });\n        setMode({ ...mode, modeName: 'none' });\n    }\n\n    const onRemove = () => {\n        dispatch({\n            type: 'REMOVE',\n            id: modeId\n        });\n        setMode({ ...mode, modeName: 'none' });\n    }\n\n    const onCancel = () => {\n        setMode({ ...mode, modeName: 'none' });\n\n    }\n\n    if (modeName === 'none') {\n        return null;\n    } else if (modeName === 'create') {\n        return (\n            <>\n                <ThemeProvider\n                    theme={{\n                        palette: {\n                            gray: '#0fe8f7',\n                            blue: '#3A5BDB'\n                        }\n                    }}\n                >\n                    <DarkBackground>\n                        <DialogBlock>\n                            <h1>Xarajatlarni ro'yxatga olish</h1>\n                            <InsertForm onSubmit={onSubmit}>\n                                <h2>Ismi</h2>\n                                <Input\n                                    type='text'\n                                    value={text}\n                                    onChange={onTextChange}\n\n\n                                />\n                                <h2>Miqdori</h2>\n                                <Input\n                                    type='number'\n                                    min='0'\n                                    value={price}\n                                    onChange={onPriceChange}\n                                />\n                                <h2>Kategoriyalar</h2>\n                                <Select\n                                    onChange={onTypeChange}\n                                >\n                                    <option value='--'>Hammasi</option>\n                                    <option value='Kirim'>Kirim</option>\n                                    <option value='Chiqim'>Chiqim</option>\n\n                                </Select>\n                                <ButtonGroup>\n                                    <Button color='gray' onClick={onCancel}>Bekor qilish</Button>\n                                    <Button color='blue' type='submit'>Ro'yxatga qo'shish</Button>\n                                </ButtonGroup>\n\n                            </InsertForm>\n                        </DialogBlock>\n                    </DarkBackground>\n                </ThemeProvider>\n            </>\n        );\n    } else if (modeName === 'edit') {\n        return (\n            <>\n                <ThemeProvider\n                    theme={{\n                        palette: {\n                            gray: '#0fe8f7',\n                            blue: 'blue'\n                        }\n                    }}\n                >\n                    <DarkBackground>\n                        <DialogBlock>\n                            <h1>Xarajatlarni ro'yxatga olish</h1>\n                            <InsertForm onSubmit={onEdit}>\n                                <h2>Ismi</h2>\n                                <Input\n                                    type='text'\n                                    value={text}\n                                    onChange={onTextChange}\n                                />\n                                <h2>Miqdori</h2>\n                                <Input\n                                    type='number'\n                                    min='0'\n                                    value={price}\n                                    onChange={onPriceChange}\n                                />\n                                <h2>Kategoriyalar</h2>\n                                <Select\n                                    onChange={onTypeChange}\n                                    value={type}\n                                >\n                                    <option value='--'>Turi</option>\n                                    <option value='Kirim'>Kirim</option>\n                                    <option value='Chiqim'>Chiqim</option>\n\n                                </Select>\n                                <ButtonGroup>\n                                    <Button color='gray' onClick={onCancel}>Bekor qilish</Button>\n                                    <Button color='blue' type='submit'>O'zgartirish</Button>\n                                </ButtonGroup>\n                            </InsertForm>\n                        </DialogBlock>\n                    </DarkBackground>\n                </ThemeProvider>\n            </>\n        );\n    } else if (modeName === 'remove') {\n        return (\n            <>\n                <ThemeProvider\n                    theme={{\n                        palette: {\n                            gray: '#0fe8f7',\n                            pink: 'red'\n                        }\n                    }}\n                >\n                    <DarkBackground>\n                        <DialogBlock>\n                            <h1>  O'chirishni istaysizmi?</h1>\n                            <ButtonGroup>\n                                <Button color='gray' onClick={onCancel}>Bekor qilish</Button>\n                                <Button color='pink' onClick={onRemove}>O'chirish</Button>\n                            </ButtonGroup>\n                        </DialogBlock>\n                    </DarkBackground>\n                </ThemeProvider>\n            </>\n        );\n    }\n}\n\nexport default CbDialog;","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { CbProvider } from './CbContext';\nimport CbTemplete from './components/CbTemplete';\nimport CbHead from './components/CbHead';\nimport CbType from './components/CbType';\nimport CbList from './components/CbList';\nimport CbCreateButton from './components/CbCreateButton';\nimport CbDialog from './components/CbDialog';\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #DFE2E6;\n    font-weight: 700;\n    mapgin-top:0;\n  }\n`;\n\nfunction App() {\n  return (\n    <CbProvider>\n      <GlobalStyle />\n      <CbTemplete>\n        <CbHead />\n        <CbType />\n        <CbList />\n        <CbCreateButton />\n      </CbTemplete>\n      <CbDialog />\n    </CbProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}